openapi: 3.0.0
servers:
  - url: 'https://api.deepgram.com/v1'
info:
  version: 1.0.0
  title: Deepgram API
  license:
    name: Apache-2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /projects:
    get:
      operationId: getProjects
      description: 'Retrieves basic information about the specified project.'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projects'
  /projects/{project_id}:
    get:
      operationId: getProject
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
    patch:
      operationId: updateProject
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
  /projects/{project_id}/keys:
    post:
      operationId: createKey
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyCreate'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyCreated'
    get:
      operationId: getKeys
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
      description: 'Retrieves keys for the specified project. If the authenticated account has access to the members:read, admins:read, and owners:read project scopes, it will list all keys for the project. Otherwise, it will only list keys that belong to the authenticated account.'
      responses:
        '200':
          description: 'Keys found.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Keys'
  /projects/{project_id}/keys/{key_id}:
    delete:
      operationId: deleteKey
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
        - name: key_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
    get:
      operationId: getKey
      parameters:
        - name: project_id
          in: path
          required: true
          schema:
            type: string
        - name: key_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
security:
  - ApiKeyAuth: []
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
  schemas:
    Key:
      title: API Key
      properties:
        api_key_id:
          type: string
          description: 'Identifier of the API Key.'
        comment:
          type: string
          description: 'Comments associated with the API Key.'
        created:
          type: string
          description: 'Date and time when the API Key was created.'
        scopes:
          type: array
          description: 'Scopes associated with the API Key.'
          items:
            type: string
    KeyCreate:
      properties:
        comment:
          type: string
        scopes:
          type: array
          items:
            type: string
    KeyCreated:
      properties:
        key:
          type: string
          description: 'Value of the API Key. This is the only chance to read the Key value; it cannot be recovered later.'
        api_key_id:
          type: string
          description: 'Identifier of the API Key.'
        comment:
          type: string
          description: 'Comments associated with the API Key.'
        created:
          type: string
          description: 'Date and time when the API Key was created.'
        scopes:
          type: array
          description: 'Scopes associated with the API Key.'
          items:
            type: string
    Keys:
      title: Keys
      properties:
        api_keys:
          type: array
          items:
            $ref: '#/components/schemas/MemberKeyPair'
    Member:
      title: Member
      properties:
        member_id:
          type: string
        email:
          type: string
    MemberKeyPair:
      title: Member and Key
      properties:
        member:
          $ref: '#/components/schemas/Member'
        api_key:
          $ref: '#/components/schemas/Key'
    Projects:
      title: Projects
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Project'
    Project:
      title: Project
      properties:
        name:
          type: string
          description: 'Name of project'
        company:
          type: string
          description: 'Name of company'
        project_id:
          type: string
    ProjectUpdate:
      title: Project update
      properties:
        name:
          type: string
          description: 'Name of project'
        company:
          type: string
          description: 'Name of company'
    MessageResponse:
      title: Response message
      properties:
        message:
          type: string